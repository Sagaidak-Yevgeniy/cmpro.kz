'use client'

import { motion, AnimatePresence } from 'framer-motion'
import { X, Gift, Clock, Users, Star } from 'lucide-react'
import { useState } from 'react'

interface DiscountPopupProps {
  language: 'ru' | 'kk'
  isVisible: boolean
  onClose: () => void
}

const translations = {
  ru: {
    title: '–°–∫–∏–¥–∫–∞ 20%! üéÅ',
    subtitle: '–ü–æ–ª—É—á–∏—Ç–µ —Å–∫–∏–¥–∫—É 20% –Ω–∞ –ø–µ—Ä–≤—ã–π –º–µ—Å—è—Ü –æ–±—É—á–µ–Ω–∏—è',
    description: '–û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –∏ –ø–æ–ª—É—á–∏—Ç–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –Ω–æ–≤—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤',
    cta: '–ü–æ–ª—É—á–∏—Ç—å —Å–∫–∏–¥–∫—É',
    close: '–ó–∞–∫—Ä—ã—Ç—å',
    features: [
      '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è',
      '–ü—Ä–æ–±–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ',
      '–ì–∏–±–∫–∏–π –≥—Ä–∞—Ñ–∏–∫ –æ–±—É—á–µ–Ω–∏—è',
      '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ø–æ –æ–∫–æ–Ω—á–∞–Ω–∏–∏'
    ],
    urgency: '–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ!'
  },
  kk: {
    title: '20% –∂–µ“£—ñ–ª–¥—ñ–∫! üéÅ',
    subtitle: '–û“õ—É–¥—ã“£ –∞–ª“ì–∞—à“õ—ã –∞–π—ã–Ω–∞ 20% –∂–µ“£—ñ–ª–¥—ñ–∫ –∞–ª—ã“£—ã–∑',
    description: '–î”ô–ª “õ–∞–∑—ñ—Ä ”©—Ç—ñ–Ω—ñ—à “õ–∞–ª–¥—ã—Ä—ã“£—ã–∑ –∂”ô–Ω–µ –∂–∞“£–∞ —Å—Ç—É–¥–µ–Ω—Ç—Ç–µ—Ä–≥–µ –∞—Ä–Ω–∞–ª“ì–∞–Ω –∞—Ä–Ω–∞–π—ã “±—Å—ã–Ω—ã—Å –∞–ª—ã“£—ã–∑',
    cta: '–ñ–µ“£—ñ–ª–¥—ñ–∫ –∞–ª—É',
    close: '–ñ–∞–±—É',
    features: [
      '–ñ–µ–∫–µ –∫–µ“£–µ—Å—à—ñ–ª—ñ–∫',
      '–¢–µ–≥—ñ–Ω —Å—ã–Ω–∞“õ —Å–∞–±–∞“ì—ã',
      '–ò–∫–µ–º–¥—ñ –æ“õ—É –∫–µ—Å—Ç–µ—Å—ñ',
      '–ê—è“õ—Ç–∞“ì–∞–Ω–Ω–∞–Ω –∫–µ–π—ñ–Ω —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç'
    ],
    urgency: '“∞—Å—ã–Ω—ã—Å —à–µ–∫—Ç–µ—É–ª—ñ!'
  }
}

export default function DiscountPopup({ language, isVisible, onClose }: DiscountPopupProps) {
  const t = translations[language]

  const handleGetDiscount = () => {
    const message = language === 'ru' 
      ? '–ü—Ä–∏–≤–µ—Ç! –•–æ—á—É –ø–æ–ª—É—á–∏—Ç—å —Å–∫–∏–¥–∫—É 20% –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ –≤ CodeMastersPRO. –ú–æ–∂–µ—Ç–µ —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ –∫—É—Ä—Å–∞—Ö –∏ —É—Å–ª–æ–≤–∏—è—Ö —Å–∫–∏–¥–∫–∏?'
      : '–°”ô–ª–µ–º! CodeMastersPRO-—Ç–∞ –æ“õ—É“ì–∞ 20% –∂–µ“£—ñ–ª–¥—ñ–∫ –∞–ª“ì—ã–º –∫–µ–ª–µ–¥—ñ. –ö—É—Ä—Å—Ç–∞—Ä –∂”ô–Ω–µ –∂–µ“£—ñ–ª–¥—ñ–∫ —à–∞—Ä—Ç—Ç–∞—Ä—ã —Ç—É—Ä–∞–ª—ã —Ç–æ–ª—ã“ì—ã—Ä–∞“õ –∞–π—Ç–∞ –∞–ª–∞—Å—ã–∑ –±–∞?';
    const encodedMessage = encodeURIComponent(message);
    window.open(`https://wa.me/77773323676?text=${encodedMessage}`, '_blank');
    onClose();
  }

  const handleBackdropClick = (e: React.MouseEvent) => {
    if (e.target === e.currentTarget) {
      onClose();
    }
  }

  return (
    <AnimatePresence>
      {isVisible && (
        <>
          {/* Backdrop */}
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            className="fixed inset-0 bg-black bg-opacity-50 z-[60]"
            onClick={handleBackdropClick}
          />
          
          {/* Popup */}
          <motion.div
            initial={{ opacity: 0, scale: 0.8, y: 50 }}
            animate={{ opacity: 1, scale: 1, y: 0 }}
            exit={{ opacity: 0, scale: 0.8, y: 50 }}
            transition={{ duration: 0.3, ease: 'easeOut' }}
            className="fixed inset-0 z-[70] flex items-center justify-center p-2 sm:p-4 pointer-events-none"
          >
            <div className="bg-white dark:bg-gray-800 rounded-2xl shadow-2xl overflow-hidden max-w-sm w-full max-h-[95vh] overflow-y-auto pointer-events-auto">
              {/* Header */}
              <div className="bg-gradient-to-r from-yellow-500 to-orange-500 p-3 sm:p-4 text-white relative">
                <button
                  onClick={onClose}
                  className="absolute top-2 right-2 sm:top-3 sm:right-3 text-white hover:text-gray-200 transition-colors"
                >
                  <X className="w-4 h-4 sm:w-5 sm:h-5" />
                </button>
                <div className="flex items-center space-x-2 mb-2 sm:mb-3">
                  <div className="w-8 h-8 sm:w-10 sm:h-10 bg-white/20 rounded-full flex items-center justify-center flex-shrink-0">
                    <Gift className="w-4 h-4 sm:w-5 sm:h-5" />
                  </div>
                  <div className="min-w-0 flex-1">
                    <h3 className="text-lg sm:text-xl font-bold truncate">{t.title}</h3>
                    <p className="text-white/90 text-xs sm:text-sm truncate">{t.subtitle}</p>
                  </div>
                </div>
                
                {/* Urgency indicator */}
                <div className="flex items-center space-x-2 bg-white/20 rounded-lg px-2 py-1">
                  <Clock className="w-3 h-3 flex-shrink-0" />
                  <span className="text-xs font-medium truncate">{t.urgency}</span>
                </div>
              </div>

              {/* Content */}
              <div className="p-3 sm:p-4">
                <p className="text-gray-600 dark:text-gray-300 mb-3 sm:mb-4 text-xs sm:text-sm leading-relaxed">{t.description}</p>
                
                {/* Features */}
                <div className="space-y-2 mb-3 sm:mb-4">
                  {t.features.map((feature, index) => (
                    <div key={index} className="flex items-start space-x-2">
                      <div className="w-3 h-3 sm:w-4 sm:h-4 bg-green-500 rounded-full flex items-center justify-center flex-shrink-0 mt-0.5">
                        <Star className="w-1.5 h-1.5 sm:w-2 sm:h-2 text-white" />
                      </div>
                      <span className="text-gray-700 dark:text-gray-300 text-xs sm:text-sm leading-relaxed">{feature}</span>
                    </div>
                  ))}
                </div>

                {/* Stats */}
                <div className="bg-gradient-to-r from-blue-50 to-purple-50 dark:from-blue-900/20 dark:to-purple-900/20 rounded-lg p-2 sm:p-3 mb-3 sm:mb-4">
                  <div className="grid grid-cols-2 gap-2 sm:gap-3 text-center">
                    <div>
                      <div className="text-lg sm:text-xl font-bold text-blue-600 dark:text-blue-400">100+</div>
                      <div className="text-xs text-gray-600 dark:text-gray-400">
                        {language === 'ru' ? '—Å—Ç—É–¥–µ–Ω—Ç–æ–≤' : '—Å—Ç—É–¥–µ–Ω—Ç'}
                      </div>
                    </div>
                    <div>
                      <div className="text-lg sm:text-xl font-bold text-purple-600 dark:text-purple-400">95%</div>
                      <div className="text-xs text-gray-600 dark:text-gray-400">
                        {language === 'ru' ? '—É—Å–ø–µ—à–Ω—ã—Ö' : '—Å”ô—Ç—Ç—ñ'}
                      </div>
                    </div>
                  </div>
                </div>

                {/* CTA Button */}
                <motion.button
                  whileHover={{ scale: 1.02 }}
                  whileTap={{ scale: 0.98 }}
                  onClick={handleGetDiscount}
                  className="w-full bg-gradient-to-r from-yellow-500 to-orange-500 text-white font-semibold py-2.5 sm:py-3 px-3 sm:px-4 rounded-xl hover:shadow-lg transition-all duration-300 flex items-center justify-center space-x-2 text-sm sm:text-base"
                >
                  <Gift className="w-3 h-3 sm:w-4 sm:h-4 flex-shrink-0" />
                  <span className="truncate">{t.cta}</span>
                </motion.button>

                {/* Close button */}
                <button
                  onClick={onClose}
                  className="w-full mt-2 text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200 transition-colors text-xs"
                >
                  {t.close}
                </button>
              </div>
            </div>
          </motion.div>
        </>
      )}
    </AnimatePresence>
  )
}
